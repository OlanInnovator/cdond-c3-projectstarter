---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    #- name: "wait 600 seconds for target connection to become reachable/usable."
     # wait_for_connection:
      # Your code here
    - name: "update apt packages"
      become: true
      become_method: sudo
      apt:
        update_cache: yes

    - name: "Remove dependencies that are no longer required"
      become: true
      apt:
        autoremove: yes

    - name: "install python for Ansible."
      # Your code here
      raw: apt -y update && apt install -y python-minimal
      when: check_python.rc != 0
      
  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'postgres')}}"  
    # Add more env vars here
    - TYPEORM_ENTITIES: "{{ lookup('env', './modules/domain/**/*.entity{.ts,.js}')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'cwzt322ayo55.us-east-1.rds.amazonaws.com')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'postgres')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'atiolA17')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'database-1')}}"

  roles:
    # Your code here
    - configure-server
    - deploy
